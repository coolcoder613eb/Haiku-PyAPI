#include <pybind11/pybind11.h>
#include <pybind11/stl.h>
#include <pybind11/iostream.h>
#include <pybind11/operators.h>

#include <DiskDeviceDefs.h>

namespace py = pybind11;

const char* get_current_task_description(const disk_device_job_progress_info& info) {
    return info.current_task_description;
}


PYBIND11_MODULE(DiskDeviceDefs, m)
{
m.attr("B_PARTITION_IS_DEVICE") = 0x01;
m.attr("B_PARTITION_FILE_SYSTEM") = 0x02;
m.attr("B_PARTITION_PARTITIONING_SYSTEM") = 0x04;
m.attr("B_PARTITION_READ_ONLY") = 0x08;
m.attr("B_PARTITION_MOUNTED") = 0x10;
m.attr("B_PARTITION_BUSY") = 0x20;

m.attr("B_PARTITION_VALID") = B_PARTITION_VALID;
m.attr("B_PARTITION_CORRUPT") = B_PARTITION_CORRUPT;
m.attr("B_PARTITION_UNRECOGNIZED") = B_PARTITION_UNRECOGNIZED;
m.attr("B_PARTITION_UNINITIALIZED") = B_PARTITION_UNINITIALIZED;

m.attr("B_PARTITION_CHANGED_OFFSET") = 0x000001;
m.attr("B_PARTITION_CHANGED_SIZE") = 0x000002;
m.attr("B_PARTITION_CHANGED_CONTENT_SIZE") = 0x000004;
m.attr("B_PARTITION_CHANGED_BLOCK_SIZE") = 0x000008;
m.attr("B_PARTITION_CHANGED_STATUS") = 0x000010;
m.attr("B_PARTITION_CHANGED_FLAGS") = 0x000020;
m.attr("B_PARTITION_CHANGED_VOLUME") = 0x000040;
m.attr("B_PARTITION_CHANGED_NAME") = 0x000080;
m.attr("B_PARTITION_CHANGED_CONTENT_NAME") = 0x000100;
m.attr("B_PARTITION_CHANGED_TYPE") = 0x000200;
m.attr("B_PARTITION_CHANGED_CONTENT_TYPE") = 0x000400;
m.attr("B_PARTITION_CHANGED_PARAMETERS") = 0x000800;
m.attr("B_PARTITION_CHANGED_CONTENT_PARAMETERS") = 0x001000;
m.attr("B_PARTITION_CHANGED_CHILDREN") = 0x002000;
m.attr("B_PARTITION_CHANGED_DESCENDANTS") = 0x004000;
m.attr("B_PARTITION_CHANGED_DEFRAGMENTATION") = 0x008000;
m.attr("B_PARTITION_CHANGED_CHECK") = 0x010000;
m.attr("B_PARTITION_CHANGED_REPAIR") = 0x020000;
m.attr("B_PARTITION_CHANGED_INITIALIZATION") = 0x040000;

m.attr("B_DISK_DEVICE_REMOVABLE") = 0x01;
m.attr("B_DISK_DEVICE_HAS_MEDIA") = 0x02;
m.attr("B_DISK_DEVICE_READ_ONLY") = 0x04;
m.attr("B_DISK_DEVICE_WRITE_ONCE") = 0x08;
m.attr("B_DISK_DEVICE_IS_FILE") = 0x10;

m.attr("B_DISK_SYSTEM_IS_FILE_SYSTEM") = 0x000001;
m.attr("B_DISK_SYSTEM_SUPPORTS_CHECKING") = 0x000002;
m.attr("B_DISK_SYSTEM_SUPPORTS_REPAIRING") = 0x000004;
m.attr("B_DISK_SYSTEM_SUPPORTS_RESIZING") = 0x000008;
m.attr("B_DISK_SYSTEM_SUPPORTS_MOVING") = 0x000010;
m.attr("B_DISK_SYSTEM_SUPPORTS_SETTING_CONTENT_NAME") = 0x000020;
m.attr("B_DISK_SYSTEM_SUPPORTS_SETTING_CONTENT_PARAMETERS") = 0x000040;
m.attr("B_DISK_SYSTEM_SUPPORTS_INITIALIZING") = 0x000080;
m.attr("B_DISK_SYSTEM_SUPPORTS_CONTENT_NAME") = 0x000100;
m.attr("B_DISK_SYSTEM_SUPPORTS_DEFRAGMENTING") = 0x001000;
m.attr("B_DISK_SYSTEM_SUPPORTS_DEFRAGMENTING_WHILE_MOUNTED") = 0x002000;
m.attr("B_DISK_SYSTEM_SUPPORTS_CHECKING_WHILE_MOUNTED") = 0x004000;
m.attr("B_DISK_SYSTEM_SUPPORTS_REPAIRING_WHILE_MOUNTED") = 0x008000;
m.attr("B_DISK_SYSTEM_SUPPORTS_RESIZING_WHILE_MOUNTED") = 0x010000;
m.attr("B_DISK_SYSTEM_SUPPORTS_MOVING_WHILE_MOUNTED") = 0x020000;
m.attr("B_DISK_SYSTEM_SUPPORTS_SETTING_CONTENT_NAME_WHILE_MOUNTED") = 0x040000;
m.attr("B_DISK_SYSTEM_SUPPORTS_SETTING_CONTENT_PARAMETERS_WHILE_MOUNTED") = 0x080000;
m.attr("B_DISK_SYSTEM_SUPPORTS_WRITING") = 0x100000;
m.attr("B_DISK_SYSTEM_SUPPORTS_RESIZING_CHILD") = 0x001000;
m.attr("B_DISK_SYSTEM_SUPPORTS_MOVING_CHILD") = 0x002000;
m.attr("B_DISK_SYSTEM_SUPPORTS_SETTING_NAME") = 0x004000;
m.attr("B_DISK_SYSTEM_SUPPORTS_SETTING_TYPE") = 0x008000;
m.attr("B_DISK_SYSTEM_SUPPORTS_SETTING_PARAMETERS") = 0x010000;
m.attr("B_DISK_SYSTEM_SUPPORTS_CREATING_CHILD") = 0x020000;
m.attr("B_DISK_SYSTEM_SUPPORTS_DELETING_CHILD") = 0x040000;
m.attr("B_DISK_SYSTEM_SUPPORTS_NAME") = 0x080000;

m.attr("B_DISK_DEVICE_JOB_BAD_TYPE") = py::cast(B_DISK_DEVICE_JOB_BAD_TYPE);
m.attr("B_DISK_DEVICE_JOB_DEFRAGMENT") = py::cast(B_DISK_DEVICE_JOB_DEFRAGMENT);
m.attr("B_DISK_DEVICE_JOB_REPAIR") = py::cast(B_DISK_DEVICE_JOB_REPAIR);
m.attr("B_DISK_DEVICE_JOB_RESIZE") = py::cast(B_DISK_DEVICE_JOB_RESIZE);
m.attr("B_DISK_DEVICE_JOB_MOVE") = py::cast(B_DISK_DEVICE_JOB_MOVE);
m.attr("B_DISK_DEVICE_JOB_SET_NAME") = py::cast(B_DISK_DEVICE_JOB_SET_NAME);
m.attr("B_DISK_DEVICE_JOB_SET_CONTENT_NAME") = py::cast(B_DISK_DEVICE_JOB_SET_CONTENT_NAME);
m.attr("B_DISK_DEVICE_JOB_SET_TYPE") = py::cast(B_DISK_DEVICE_JOB_SET_TYPE);
m.attr("B_DISK_DEVICE_JOB_SET_PARAMETERS") = py::cast(B_DISK_DEVICE_JOB_SET_PARAMETERS);
m.attr("B_DISK_DEVICE_JOB_SET_CONTENT_PARAMETERS") = py::cast(B_DISK_DEVICE_JOB_SET_CONTENT_PARAMETERS);
m.attr("B_DISK_DEVICE_JOB_INITIALIZE") = py::cast(B_DISK_DEVICE_JOB_INITIALIZE);
m.attr("B_DISK_DEVICE_JOB_UNINITIALIZE") = py::cast(B_DISK_DEVICE_JOB_UNINITIALIZE);
m.attr("B_DISK_DEVICE_JOB_CREATE") = py::cast(B_DISK_DEVICE_JOB_CREATE);
m.attr("B_DISK_DEVICE_JOB_DELETE") = py::cast(B_DISK_DEVICE_JOB_DELETE);
m.attr("B_DISK_DEVICE_JOB_SCAN") = py::cast(B_DISK_DEVICE_JOB_SCAN);

m.attr("B_DISK_DEVICE_JOB_UNINITIALIZED") = py::cast(B_DISK_DEVICE_JOB_UNINITIALIZED);
m.attr("B_DISK_DEVICE_JOB_SCHEDULED") = py::cast(B_DISK_DEVICE_JOB_SCHEDULED);
m.attr("B_DISK_DEVICE_JOB_IN_PROGRESS") = py::cast(B_DISK_DEVICE_JOB_IN_PROGRESS);
m.attr("B_DISK_DEVICE_JOB_SUCCEEDED") = py::cast(B_DISK_DEVICE_JOB_SUCCEEDED);
m.attr("B_DISK_DEVICE_JOB_FAILED") = py::cast(B_DISK_DEVICE_JOB_FAILED);
m.attr("B_DISK_DEVICE_JOB_CANCELED") = py::cast(B_DISK_DEVICE_JOB_CANCELED);

m.attr("B_DISK_DEVICE_JOB_CAN_CANCEL") = 0x01;
m.attr("B_DISK_DEVICE_JOB_STOP_ON_CANCEL") = 0x02;
m.attr("B_DISK_DEVICE_JOB_REVERSE_ON_CANCEL") = 0x04;
m.attr("B_DISK_DEVICE_JOB_CAN_PAUSE") = 0x08;

py::enum_<B_PARAMETER_EDITOR_TYPE>(m, "B_PARAMETER_EDITOR_TYPE", "")
.value("B_CREATE_PARAMETER_EDITOR", B_PARAMETER_EDITOR_TYPE::B_CREATE_PARAMETER_EDITOR, "")
.value("B_INITIALIZE_PARAMETER_EDITOR", B_PARAMETER_EDITOR_TYPE::B_INITIALIZE_PARAMETER_EDITOR, "")
.value("B_DELETE_PARAMETER_EDITOR", B_PARAMETER_EDITOR_TYPE::B_DELETE_PARAMETER_EDITOR, "")
.value("B_PROPERTIES_PARAMETER_EDITOR", B_PARAMETER_EDITOR_TYPE::B_PROPERTIES_PARAMETER_EDITOR, "")
.export_values();

py::class_<disk_device_job_progress_info>(m, "disk_device_job_progress_info")
.def_readwrite("status", &disk_device_job_progress_info::status, "")
.def_readwrite("interrupt_properties", &disk_device_job_progress_info::interrupt_properties, "")
.def_readwrite("task_count", &disk_device_job_progress_info::task_count, "")
.def_readwrite("completed_tasks", &disk_device_job_progress_info::completed_tasks, "")
.def_readwrite("current_task_progress", &disk_device_job_progress_info::current_task_progress, "")
.def_property("current_task_description",
                      [](const disk_device_job_progress_info& info) -> py::str {
                          return py::str(get_current_task_description(info));
                      },
                      nullptr);
//.def_readwrite("current_task_description", &disk_device_job_progress_info::current_task_description, "")
;

}
